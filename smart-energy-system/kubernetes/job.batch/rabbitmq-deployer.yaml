apiVersion: batch/v1
kind: Job
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: deployer.marketplace.cloud.google.com
    app.kubernetes.io/name: rabbitmq
  name: rabbitmq-deployer
  ownerReferences:
  - apiVersion: app.k8s.io/v1beta1
    blockOwnerDeletion: true
    kind: Application
    name: rabbitmq
    uid: 23a19598-f977-11e9-a465-42010a80005e
  selfLink: /apis/batch/v1/namespaces/default/jobs/rabbitmq-deployer
spec:
  backoffLimit: 0
  completions: 1
  parallelism: 1
  selector:
    matchLabels:
      controller-uid: 24e5ec5a-f977-11e9-a465-42010a80005e
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      creationTimestamp: null
      labels:
        controller-uid: 24e5ec5a-f977-11e9-a465-42010a80005e
        job-name: rabbitmq-deployer
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: rabbitmq-deployer-config
        image: gcr.io/cloud-marketplace/google/rabbitmq/deployer@sha256:3da425daaed24a88b3b95f36af1ec6862c6e48691c279a9051b99ca1082a8829
        imagePullPolicy: IfNotPresent
        name: deployer
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data/values
          name: config-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: rabbitmq-deployer-sa
      serviceAccountName: rabbitmq-deployer-sa
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: rabbitmq-deployer-config
        name: config-volume
status: {}
